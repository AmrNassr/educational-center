/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classpriv;

import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author amnassar
 */
public final class exam extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
       Connection con ;
    PreparedStatement pst ;
    ResultSet rs;
     public String y ;
    
    public exam() {
        initComponents();
        con=DBConnect.connect();
        privateexam();
        comboxfromcombo2();
        clear();

           cmexam1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
           degree1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
           AutoCompleteDecorator.decorate(cmexam1);
           
 TableCellRenderer rendererFromHeader = tdetails1.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
             Calendar cal = new GregorianCalendar();
                int day = cal.get(Calendar.DAY_OF_MONTH);
                int month=cal.get(Calendar.MONTH)+1;
                int year = cal.get(Calendar.YEAR);
               date1.setText(year+":"+month+":"+day);
          
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tdetails1 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        degree1 = new javax.swing.JTextField();
        serial1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmexam1 = new javax.swing.JComboBox();
        save2 = new javax.swing.JButton();
        examdegree1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        date1 = new javax.swing.JTextField();
        delete1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        serialid1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tdetails1.setBackground(new java.awt.Color(17, 39, 37));
        tdetails1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tdetails1.setForeground(new java.awt.Color(255, 255, 255));
        tdetails1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "التاريخ", "الناتج", "اسم الامتحان", "الرقم التسلسلي"
            }
        ));
        tdetails1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails1.setRowHeight(25);
        tdetails1.setRowMargin(2);
        tdetails1.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetails1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tdetails1);
        if (tdetails1.getColumnModel().getColumnCount() > 0) {
            tdetails1.getColumnModel().getColumn(3).setMinWidth(100);
            tdetails1.getColumnModel().getColumn(3).setPreferredWidth(100);
            tdetails1.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 920, 280));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("الدرجه");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 170, 160, -1));

        degree1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        degree1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                degree1KeyPressed(evt);
            }
        });
        jPanel1.add(degree1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 80, 30));

        serial1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        serial1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serial1KeyPressed(evt);
            }
        });
        jPanel1.add(serial1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, 80, 30));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("كود الطالب");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, 160, -1));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("الامتحان");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 70, 160, -1));

        cmexam1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jPanel1.add(cmexam1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 230, 30));

        save2.setBackground(new java.awt.Color(98, 113, 146));
        save2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save2.setForeground(new java.awt.Color(255, 255, 255));
        save2.setText("حفظ");
        save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save2ActionPerformed(evt);
            }
        });
        jPanel1.add(save2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 180, 40));

        examdegree1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel1.add(examdegree1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 80, 30));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("الدرجه");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 70, -1));

        date1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jPanel1.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 160, 50));

        delete1.setBackground(new java.awt.Color(98, 113, 146));
        delete1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        delete1.setForeground(new java.awt.Color(255, 255, 255));
        delete1.setText("مسح");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });
        jPanel1.add(delete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 520, 180, 50));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/myback.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 630));

        serialid1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        serialid1.setForeground(new java.awt.Color(255, 255, 255));
        serialid1.setText("Seriallllllllll");
        jPanel1.add(serialid1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 190, 50));

        jTabbedPane1.addTab("مميز", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 960, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tdetails1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetails1MouseClicked
  DefaultTableModel tmodel =(DefaultTableModel)tdetails1.getModel();
        //bid,name, price, publisher, book_type, b_code, date, category
        int selectrowindex=tdetails1.getSelectedRow();
       serialid1.setText(tmodel.getValueAt(selectrowindex, 3).toString());
     
                 
    }//GEN-LAST:event_tdetails1MouseClicked

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
         if(serialid1.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "من فضلك اختر الطالب المراد ازال امتحانه ");

        }
        else{
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العمليه", "تاكيد العمليه", dialogButton);
            if(dialogResult == 0) {
                try {
                    String sql = "DELETE FROM mrahmed.studentresult WHERE serial='"+serialid1.getText()+"'";
                    pst=(PreparedStatement) con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(rootPane, " تم ازاله  درجه الطالب بنجاح");
                     privatetablelord(cmexam1.getSelectedItem().toString());
                } catch (SQLException ex) {

                }
                clear();
            }
            else
            {

                JOptionPane.showMessageDialog(this, " تم الغاء العمليه");
            }
        }
    }//GEN-LAST:event_delete1ActionPerformed

    private void save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save2ActionPerformed
      
        if(serial1.getText().equals("PN-")||serial1.getText().trim().isEmpty()||degree1.getText().trim().isEmpty()||cmexam1.getSelectedItem().equals(""))
        {
              JOptionPane.showMessageDialog(rootPane, "من فضلك ادخل البيانات بالكامل");
        }
        else
        {
        privatetablelord(cmexam1.getSelectedItem().toString());
        String seriall = serial1.getText();
        String datee=date1.getText();
        String examname = cmexam1.getSelectedItem().toString();
        try
           {
               double degreee =Double.parseDouble(degree1.getText());
               int examdegreee = Integer.parseInt(examdegree1.getText());
               String result = ""+degreee +" / "+examdegreee;
               if(examdegreee >= degreee)
               {
                    String sqll = "SELECT serial FROM mrahmed.privatestudents where serial = '"+seriall+"'";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
              if (rs.next())
                {
                 String sqll1 = "SELECT * FROM mrahmed.studentresult where serial = '"+seriall+"' AND examname='"+examname+"'";
              pst=(PreparedStatement) con.prepareStatement(sqll1);
            rs=pst.executeQuery();
              if (rs.next())
                {
                    JOptionPane.showMessageDialog(rootPane, "تم تسجيل درجه الطالب من قبل");
                    serial1.setText("PN-");
                serial1.requestFocus();
               privatetablelord(cmexam1.getSelectedItem().toString());
                }
              else
              {
                  String sq12 = "INSERT INTO mrahmed.studentresult (examname, result, serial,date,examdegree,studentdegree) "
                          + "VALUES ('"+examname+"','"+result+"','"+seriall+"','"+date1.getText()+"','"+examdegreee+"','"+degreee+"')";
                pst = (PreparedStatement)con.prepareStatement(sq12);
                pst.execute();
                JOptionPane.showMessageDialog(rootPane, "تم تسجيل درجه الطالب بمجاح");
                serial1.setText("PN-");
                serial1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
              }
                    
                }
              else
              {
                  JOptionPane.showMessageDialog(rootPane, "كود الطالب غير صحيح");
                  serial1.setText("PN-");
                serial1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
              }
                   
                   
               }
               else
               {
                   JOptionPane.showMessageDialog(rootPane, "درجه الطالب اكبر من درجه الامتحان");
                   
                degree1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
               }
           }
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }
    }//GEN-LAST:event_save2ActionPerformed

    private void degree1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_degree1KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) 
{
    if(serial1.getText().equals("PN-")||serial1.getText().trim().isEmpty()||degree1.getText().trim().isEmpty()||cmexam1.getSelectedItem().equals(""))
        {
              JOptionPane.showMessageDialog(rootPane, "من فضلك ادخل البيانات بالكامل");
        }
        else
        {
        privatetablelord(cmexam1.getSelectedItem().toString());
        String seriall = serial1.getText();
        String datee=date1.getText();
        String examname = cmexam1.getSelectedItem().toString();
        try
           {
               int degreee = Integer.parseInt(degree1.getText());
               int examdegreee = Integer.parseInt(examdegree1.getText());
               String result = ""+degreee +" / "+examdegreee;
               if(examdegreee >= degreee)
               {
                    String sqll = "SELECT serial FROM mrahmed.students where serial = '"+seriall+"'";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
              if (rs.next())
                {
                 String sqll1 = "SELECT * FROM mrahmed.studentresult where serial = '"+seriall+"' AND examname='"+examname+"'";
              pst=(PreparedStatement) con.prepareStatement(sqll1);
            rs=pst.executeQuery();
              if (rs.next())
                {
                    JOptionPane.showMessageDialog(rootPane, "تم تسجيل درجه الطالب من قبل");
                    serial1.setText("PN-");
                serial1.requestFocus();
               privatetablelord(cmexam1.getSelectedItem().toString());
                }
              else
              {
                  String sq12 = "INSERT INTO mrahmed.studentresult (examname, result, serial,date) VALUES ('"+examname+"','"+result+"','"+seriall+"','"+datee+"')";
                pst = (PreparedStatement)con.prepareStatement(sq12);
                pst.execute();
                JOptionPane.showMessageDialog(rootPane, "تم تسجيل درجه الطالب بمجاح");
                serial1.setText("PN-");
                serial1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
              }
                    
                }
              else
              {
                  JOptionPane.showMessageDialog(rootPane, "كود الطالب غير صحيح");
                  serial1.setText("PN-");
                serial1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
              }
                   
                   
               }
               else
               {
                   JOptionPane.showMessageDialog(rootPane, "درجه الطالب اكبر من درجه الامتحان");
                   
                degree1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
               }
           }
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }
}
    }//GEN-LAST:event_degree1KeyPressed

    private void serial1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serial1KeyPressed
            if(evt.getKeyCode()==KeyEvent.VK_ENTER) 
{ if(serial1.getText().equals("PN-")||serial1.getText().trim().isEmpty()||degree1.getText().trim().isEmpty()||cmexam1.getSelectedItem().equals(""))
        {
              JOptionPane.showMessageDialog(rootPane, "من فضلك ادخل البيانات بالكامل");
        }
        else
        {
        privatetablelord(cmexam1.getSelectedItem().toString());
        String seriall = serial1.getText();
        String examname = cmexam1.getSelectedItem().toString();
        try
           {
               int degreee = Integer.parseInt(degree1.getText());
               int examdegreee = Integer.parseInt(examdegree1.getText());
               String result = ""+degreee +" / "+examdegreee;
               if(examdegreee >= degreee)
               {
                    String sqll = "SELECT serial FROM mrahmed.privatestudents where serial = '"+seriall+"'";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
              if (rs.next())
                {
                 String sqll1 = "SELECT * FROM mrahmed.studentresult where serial = '"+seriall+"' AND examname='"+examname+"'";
              pst=(PreparedStatement) con.prepareStatement(sqll1);
            rs=pst.executeQuery();
              if (rs.next())
                {
                    JOptionPane.showMessageDialog(rootPane, "تم تسجيل درجه الطالب من قبل");
                    serial1.setText("PN-");
                serial1.requestFocus();
               privatetablelord(cmexam1.getSelectedItem().toString());
                }
              else
              {
                  String sq12 = "INSERT INTO mrahmed.studentresult (examname, result, serial,date) VALUES ('"+examname+"','"+result+"','"+seriall+"','"+date1.getText()+"')";
                pst = (PreparedStatement)con.prepareStatement(sq12);
                pst.execute();
                JOptionPane.showMessageDialog(rootPane, "تم تسجيل درجه الطالب بمجاح");
                serial1.setText("PN-");
                serial1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
              }
                    
                }
              else
              {
                  JOptionPane.showMessageDialog(rootPane, "كود الطالب غير صحيح");
                  serial1.setText("PN-");
                serial1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
              }
                   
                   
               }
               else
               {
                   JOptionPane.showMessageDialog(rootPane, "درجه الطالب اكبر من درجه الامتحان");
                   
                degree1.requestFocus();
                degree1.setText("");
                 privatetablelord(cmexam1.getSelectedItem().toString());
               }
           }
        catch(Exception e )
        {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }
}
    }//GEN-LAST:event_serial1KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmexam1;
    private javax.swing.JTextField date1;
    private javax.swing.JTextField degree1;
    private javax.swing.JButton delete1;
    private javax.swing.JTextField examdegree1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton save2;
    private javax.swing.JTextField serial1;
    private javax.swing.JLabel serialid1;
    private javax.swing.JTable tdetails1;
    // End of variables declaration//GEN-END:variables

   public void privatetablelord(String x)
    {
        try {
           String sqll = "SELECT serial,examname,result,date FROM mrahmed.studentresult where examname='"+x+"' ORDER BY examname ";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails1.getModel(); 
                model.setRowCount(0);
              int k = 0;
                while (rs.next())
                {
                    Object row[] = {
                        rs.getString("date"),
                      rs.getString("result"),
                         rs.getString("examname"),
                       rs.getString("serial"),
                 
                                };
                    model.addRow(row);
                    k++;
                }
                for(int i = k ;i<11;i++)
                {
                 Object rowData[] = {
                       "",
                     "",
                     "",
                     "",
                     "",
                       };
                model.addRow(rowData);
                } 
        }
        catch (SQLException ex) {
            
        }
    }
     public void clear()
 { 
 serial1.setText("PN-"); 
 serialid1.setText("");



 
 }
      public void privateexam()
   {
        try {
             String sql="SELECT name  FROM mrahmed.exam where grouptype = 'مميز'  ";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String name = rs.getString("name");
                
                cmexam1.addItem(name);
  
             }

         } catch (SQLException ex) {
             
         }
   }
           

    public void comboxfromcombo2()
      {
                   cmexam1.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent event) {
                JComboBox cmsupplier = (JComboBox) event.getSource();

                Object item = event.getItem();
                
                 try {
             String sql="SELECT degree  FROM mrahmed.exam where name='"+cmexam1.getSelectedItem().toString()+"'";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                 examdegree1.setText(rs.getString("degree"));
                 privatetablelord(cmexam1.getSelectedItem().toString());
              

                if (event.getStateChange() == ItemEvent.SELECTED) {
                      examdegree1.setText(rs.getString("degree"));
                      privatetablelord(cmexam1.getSelectedItem().toString());
                     
              
                }

                if (event.getStateChange() == ItemEvent.DESELECTED) {
                    
                }
  
             }

         } catch (SQLException ex) {
             
         }
         }
        });
       
      }
         

     
}
