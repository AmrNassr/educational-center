/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classpriv;

import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author amnassar
 */
public final class Groups extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
       Connection con ;
    PreparedStatement pst ;
    ResultSet rs;
   
    public Groups() {
        initComponents();
        con=DBConnect.connect();
        tablelord();
        clear();
        place();
        comboxfromcombo();
         Calendar cal = new GregorianCalendar();
         int yearr = cal.get(Calendar.YEAR);
         time.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
           cmday.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
           cmplace.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
         
           TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tdetails.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
  
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        cmday = new javax.swing.JComboBox();
        cmplace = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        cmtype1 = new javax.swing.JComboBox();
        save = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        التوقيت = new javax.swing.JLabel();
        cmyear = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userid = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tdetails.setBackground(new java.awt.Color(17, 39, 37));
        tdetails.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        tdetails.setForeground(new java.awt.Color(255, 255, 255));
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "اسم المجموعه", "رقم"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(1).setMinWidth(250);
            tdetails.getColumnModel().getColumn(1).setPreferredWidth(250);
            tdetails.getColumnModel().getColumn(1).setMaxWidth(250);
        }

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 920, 280));

        delete.setBackground(new java.awt.Color(98, 113, 146));
        delete.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("مسح");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel10.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 590, 180, 50));

        cmday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "السبت", "الاحد", "الاثنين", "الثلاثاء", "الاربعاء", "الخميس", "الجمعه" }));
        jPanel10.add(cmday, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 230, 30));

        cmplace.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jPanel10.add(cmplace, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 230, 30));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("النوع");
        jPanel10.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 190, 70, -1));

        cmtype1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "اساسي", "حجز" }));
        jPanel10.add(cmtype1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 190, 80, 30));

        save.setBackground(new java.awt.Color(98, 113, 146));
        save.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("حفظ");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel10.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 180, 40));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("المكان");
        jPanel10.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, 60, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("اليوم");
        jPanel10.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 40, 50, -1));

        time.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 230, 30));

        التوقيت.setBackground(new java.awt.Color(255, 255, 255));
        التوقيت.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        التوقيت.setForeground(new java.awt.Color(255, 255, 255));
        التوقيت.setText("توقيت المجموعه");
        jPanel10.add(التوقيت, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 90, 170, -1));

        cmyear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "2020", "2021", "2023", "2024", "2025", "2026", "2027", "2028", "2029" }));
        cmyear.setEnabled(false);
        jPanel10.add(cmyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 190, 80, 30));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("السنه");
        jPanel10.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 70, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/myback.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        userid.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        userid.setForeground(new java.awt.Color(255, 255, 255));
        userid.setText("jLabel1");
        jPanel10.add(userid, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        if(userid.getText().trim().isEmpty())
        {

            String timee = time.getText();
            String place = cmplace.getSelectedItem().toString();
           
            String day = cmday.getSelectedItem().toString();
            String yearr = cmyear.getSelectedItem().toString();
            

            if( time.getText().trim().isEmpty() || cmday.getSelectedItem().equals(" ") ||cmplace.getSelectedItem().toString().trim().isEmpty()  )
            {
                JOptionPane.showMessageDialog(this, " من فضلك ادخل بيانات المجموعه بالكامل");
            }
            else
            {
                String GroupName = ""+place+" - "+day+" - "+"الساعه("+timee+")";
                String dayandtime=""+day+""+timee+""+cmtype1.getSelectedItem().toString();
                try
                {
                     String sqll1 = "SELECT dayandtime FROM mrahmed.groups Where dayandtime='"+dayandtime+"' AND type='"+cmtype1.getSelectedItem().toString()+"' ";
              pst=(PreparedStatement) con.prepareStatement(sqll1);
            rs=pst.executeQuery();
            
                if (rs.next())
                {
                    String x = rs.getString("dayandtime");
                    if(x.equals(dayandtime))
                    {
                        JOptionPane.showMessageDialog(this, " المجموعه موجوده مسبقا");
                    }
                }
                    else
                    {
                           int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العمليه", "تاكيد العمليه", dialogButton);
                if(dialogResult == 0) {
                    try{
                        String sql = "INSERT INTO mrahmed.groups(year,GroupName,dayandtime,type) VALUES"
                        + " ('"+yearr+"','"+GroupName+"','"+dayandtime+"','"+cmtype1.getSelectedItem().toString()+"')";
                        pst = (PreparedStatement)con.prepareStatement(sql);
                        pst.execute();
                        JOptionPane.showMessageDialog(null, "تم اضافه المجموعه بنجاح");

                        clear();
                        tablelord();

                    }
                    catch(Exception e ){
                        JOptionPane.showMessageDialog(null,e);
                    }

                }
                else
                {JOptionPane.showMessageDialog(this, " تم الغاء العمليه");

                }
                    }
                
                }
                catch(Exception e )
                {
                       }
             
            }
        }
      /* else
        {
              String timee = time.getText();
            String place = cmplace.getSelectedItem().toString();
            String type = cmtype.getSelectedItem().toString();
            String day = cmday.getSelectedItem().toString();
            int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العمليه", "تاكيد العمليه", dialogButton);
                if(dialogResult == 0) {
                 try {
                         String GroupName = ""+place+" - "+day+" - "+"الساعه("+timee+")"+" - "+type;

                    String sql = "UPDATE mrahmed.groups SET groupname='"+GroupName+"' WHERE idGroups='"+id+"'";
                    pst=(PreparedStatement) con.prepareStatement(sql);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "تم تعديل بيانات الموظف بنجاح");
                    clear();
                    tablelord();

                } catch (SQLException ex) {

                }
            }
            else
            {JOptionPane.showMessageDialog(this, " تم الغاء العمليه");
               

            }
        }*/
    }//GEN-LAST:event_saveActionPerformed

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel =(DefaultTableModel)tdetails.getModel();
        int selectrowindex=tdetails.getSelectedRow();
      
        userid.setText(tmodel.getValueAt(selectrowindex, 1).toString());
        
  
    }//GEN-LAST:event_tdetailsMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(userid.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "من فضلك اختر المراد المراد ازالتها ");

        }
        else{
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العمليه", "تاكيد العمليه", dialogButton);
            if(dialogResult == 0) {
                try {
                    String sql = "DELETE FROM mrahmed.groups  WHERE idGroups='"+userid.getText()+"'";
                    pst=(PreparedStatement) con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(rootPane, " تم ازاله المجموعه");
                    tablelord();
                } catch (SQLException ex) {

                }
                clear();
            }
            else
            {

                JOptionPane.showMessageDialog(this, " تم الغاء العمليه");
            }
        }
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmday;
    private javax.swing.JComboBox cmplace;
    private javax.swing.JComboBox cmtype1;
    private javax.swing.JComboBox cmyear;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton save;
    private javax.swing.JTable tdetails;
    private javax.swing.JTextField time;
    private javax.swing.JLabel userid;
    private javax.swing.JLabel التوقيت;
    // End of variables declaration//GEN-END:variables

   public void tablelord()
    {
        try {
            String sqll = "SELECT idGroups, groupname FROM mrahmed.groups where type = 'اساسي' ";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails.getModel(); 
                model.setRowCount(0);
              
                while (rs.next())
                {
                    Object row[] = {
                      rs.getString("groupname"),
                        rs.getString("idGroups"),
                                };
                    model.addRow(row);
                    
                }
                
        }
        catch (SQLException ex) {
            
        }
    }
     public void clear()
 {

 cmplace.setSelectedIndex(0);
 cmtype1.setSelectedIndex(0);
 cmyear.setSelectedIndex(0);
 cmday.setSelectedIndex(0);
 time.setText("");
 userid.setText("");

 
 }
      public void place()
   {
        try {
             String sql="SELECT placename  FROM mrahmed.place ";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String namee = rs.getString("placename");
                
                cmplace.addItem(namee);
  
             }

         } catch (SQLException ex) {
             
         }
   }
     public void comboxfromcombo()
      {
        
          
                   cmtype1.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent event) {
                JComboBox cmsupplier = (JComboBox) event.getSource();

                Object item = event.getItem();
                     String h = cmtype1.getSelectedItem().toString();
                     if(h.equals("حجز"))
                     {
                         cmyear.setEnabled(true);
                     }
                     else 
                     {
                      
                         cmyear.setEnabled(false);
                     
                     }
              
         }
        });
       
      }
}
